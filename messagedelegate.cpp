#include "messagedelegate.h"

MessageDelegate::MessageDelegate(QObject *parent) : QStyledItemDelegate(parent) {}

void MessageDelegate::paint(QPainter *painter, const QStyleOptionViewItem &option, const QModelIndex &index) const {
    painter->save();

    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –º–æ–¥–µ–ª–∏
    QString text = index.data(MessageModel::TextRole).toString();
    QString sender = index.data(MessageModel::SenderRole).toString();
    QString time = index.data(MessageModel::TimestampRole).toDateTime().toString("hh:mm");
    bool isOutgoing = index.data(MessageModel::IsOutgoingRole).toBool();
    int status = index.data(MessageModel::StatusRole).toInt();

    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å—Ç–∏–ª—å
    QRect rect = option.rect.adjusted(5, 5, -5, -5);
    QColor bubbleColor = isOutgoing ? QColor("#DCF8C6") : QColor("#FFFFFF");
    QColor textColor = Qt::black;

    // –†–∏—Å—É–µ–º "–ø—É–∑—ã—Ä—å" —Å–æ–æ–±—â–µ–Ω–∏—è
    painter->setBrush(bubbleColor);
    painter->setPen(Qt::NoPen);
    painter->drawRoundedRect(rect, 10, 10);

    // –†–∏—Å—É–µ–º —Ç–µ–∫—Å—Ç
    painter->setPen(textColor);
    QFont font = painter->font();
    font.setPointSize(10);
    painter->setFont(font);

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–Ω–æ—Å–∞ —Ç–µ–∫—Å—Ç–∞
    QTextOption textOption;
    textOption.setWrapMode(QTextOption::WordWrap);
    // –ü—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –¥–ª—è —Ç–µ–∫—Å—Ç–∞ —Å –æ—Ç—Å—Ç—É–ø–∞–º–∏
    QRect textRect = rect.adjusted(10, 10, -10, -10);
    painter->drawText(textRect, text, textOption);

    // –†–∏—Å—É–µ–º —Å—Ç–∞—Ç—É—Å –∏ –≤—Ä–µ–º—è
    QString statusText;
    switch(status) {
    case Message::Sending: statusText = "üïí"; break;
    case Message::Sent: statusText = "‚úì"; break;
    case Message::Delivered: statusText = "‚úì‚úì"; break;
    case Message::Error: statusText = "‚ùå"; break;
    case Message::None: statusText = ""; break;
    case Message::CommandOutput: statusText = "‚ÑπÔ∏è"; break;
    }

    painter->drawText(rect.bottomRight() - QPoint(80, 5),
                      QString("%1 %2").arg(time, statusText));

    painter->restore();
}

QSize MessageDelegate::sizeHint(const QStyleOptionViewItem &option, const QModelIndex &index) const {
    QString text = index.data(MessageModel::TextRole).toString();
    QFontMetrics fm(option.font);

    // –®–∏—Ä–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞ = —à–∏—Ä–∏–Ω–∞ ListView –º–∏–Ω—É—Å –æ—Ç—Å—Ç—É–ø—ã
    int textWidth = option.rect.width() - 40; // 20px —Å–ª–µ–≤–∞ + 20px —Å–ø—Ä–∞–≤–∞

    // –í—ã—á–∏—Å–ª—è–µ–º –≤—ã—Å–æ—Ç—É —Å —É—á–µ—Ç–æ–º –ø–µ—Ä–µ–Ω–æ—Å–∞ —Å–ª–æ–≤
    QRect textRect = fm.boundingRect(QRect(0, 0, textWidth, 0),
                                     Qt::TextWordWrap, text);

    return QSize(option.rect.width(), textRect.height() + 40); // + –æ—Ç—Å—Ç—É–ø—ã
}
